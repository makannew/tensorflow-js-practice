{"version":3,"sources":["components/layers-ui/layers-ui.module.css","components/train/train.module.css","components/model/model.module.css","components/predict/predict.module.css","components/load-data/load-data.module.css","components/data-plot/data-plot.module.css","assets/github.png","components/links/links.module.css","components/header/header.module.css","components/load-data/load-data.js","components/data-plot/data-plot.js","components/layers-ui/layers-ui.js","components/model/model.js","components/tensors/tensors.js","components/train/train.js","components/predict/predict.js","components/links/links.js","components/header/header.js","components/resize-manager/resize-manager.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DATA_URL","LoadData","dataGateway","useLinkedState","setData","useState","status","setStatus","useDelayedFunction","delayedFetch","cancelDelayedFetch","a","fetch","res","json","data","map","car","mpg","Miles_per_Gallon","horsepower","Horsepower","filter","loadData","then","catch","err","useEffect","className","style","onClick","DataPlot","refreshGateway","visDiv","useRef","values","d","x","y","tfvis","scatterplot","current","xLabel","yLabel","height","ref","LayersUI","layers","updateFunc","ACTIVATION","removeLayer","e","value","Number","target","item","layerNo","i","handleChange","propName","name","match","includes","key","type","min","max","units","onChange","defaultValue","activation","opt","length","newLayer","Model","modelGateway","model","setModel","setLayers","modelRef","forEach","layer","dispose","thisModel","tf","add","dense","inputShape","modelSummary","Tensors","tensorsGateway","setTensors","thisTensors","shuffle","inputs","labels","inputsTensor","labelsTensor","inputsMax","inputsMin","labelsMax","labelsMin","sub","div","Train","tensors","batchSize","setBatchSize","epochs","setEpochs","training","setTraining","compile","optimizer","adam","loss","meanSquaredError","metrics","fit","callbacks","fitCallbacks","trainRef","delayedTrain","htmlFor","step","Predict","resultRef","input","pred","predict","reshape","denormX","mul","denormY","dataSync","xs","ys","Array","from","originalData","series","Links","href","rel","src","github","alt","Header","ResizeManager","setRefresh","setRefreshBydelay","window","addEventListener","removeEventListener","App","useStateGateway","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ed9f0682.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layers-ui_container__2GhWk\",\"table-header\":\"layers-ui_table-header__37MNX\",\"item\":\"layers-ui_item__2NbMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"train_container__3jwrY\",\"controls\":\"train_controls__lcD_S\",\"graph\":\"train_graph__2kzE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"model_container__3fCLH\",\"model\":\"model_model__DMkpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"predict_container__3ynJF\",\"graph\":\"predict_graph__3jTjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"load-data\":\"load-data_load-data__3K1FU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data-plot\":\"data-plot_data-plot__12tgk\"};","module.exports = __webpack_public_path__ + \"static/media/github.49e6c8b3.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"links_container__bOZ1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\"};","import React, { useEffect, useState } from \"react\";\nimport useDelayedFunction from \"use-delayed-function\";\nimport { useLinkedState } from \"use-linked-state\";\nimport style from \"./load-data.module.css\";\nconst DATA_URL = \"https://storage.googleapis.com/tfjs-tutorials/carsData.json\";\n\nexport default function LoadData({ dataGateway }) {\n  const [, setData] = useLinkedState(dataGateway);\n  const [status, setStatus] = useState(\"loading...\");\n  const [delayedFetch, cancelDelayedFetch] = useDelayedFunction(fetchData);\n\n  //\n  async function fetchData() {\n    const res = await fetch(DATA_URL);\n    const data = await res.json();\n    return data\n      .map((car) => ({\n        mpg: car.Miles_per_Gallon,\n        horsepower: car.Horsepower,\n      }))\n      .filter((car) => car.mpg != null && car.horsepower != null);\n  }\n  //\n  function loadData() {\n    setStatus(\"loading...\");\n    delayedFetch()\n      .then((data) => {\n        setData(data);\n        setStatus(\"Dataset successfully loaded Click to re-load\");\n      })\n      .catch((err) => {\n        setStatus(err);\n      });\n  }\n\n  useEffect(() => {\n    loadData();\n    return () => {\n      cancelDelayedFetch();\n    };\n  }, []);\n  return (\n    <div className={style[\"load-data\"]}>\n      <button className=\"btn\" onClick={loadData}>\n        {status}\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useLinkedState } from \"use-linked-state\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\nimport style from \"./data-plot.module.css\";\n\nexport default function DataPlot({ dataGateway, refreshGateway }) {\n  const [data] = useLinkedState(dataGateway);\n  const [refresh] = useLinkedState(refreshGateway);\n\n  const visDiv = useRef();\n\n  useEffect(() => {\n    if (data != null) {\n      const values = data.map((d) => ({\n        x: d.horsepower,\n        y: d.mpg,\n      }));\n\n      tfvis.render.scatterplot(\n        visDiv.current,\n        { values },\n        {\n          xLabel: \"Horsepower\",\n          yLabel: \"MPG\",\n          height: 400,\n        }\n      );\n    }\n  });\n\n  return <div className={style[\"data-plot\"]} ref={visDiv}></div>;\n}\n","import React from \"react\";\nimport style from \"./layers-ui.module.css\";\n\nexport default function LayersUI({ layers, updateFunc, ACTIVATION }) {\n  function addLayer() {\n    const { layerNo, units, activation } = layers[layers.length - 1];\n    const newLayer = { layerNo: layerNo + 1, units, activation };\n    updateFunc((layers) => [...layers, newLayer]);\n  }\n\n  const removeLayer = (e) => {\n    const value = Number(e.target.value);\n    const newLayers = layers\n      .filter((item) => item.layerNo !== value)\n      .map((item, i) => ({ ...item, layerNo: i + 1 }));\n    updateFunc((layers) =>\n      layers\n        .filter((item) => item.layerNo !== value)\n        .map((item, i) => ({ ...item, layerNo: i + 1 }))\n    );\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const layerNo = Number(name.match(/(\\d+)/)[0]);\n    let value = e.target.value;\n    let propName;\n    if (name.includes(\"u-\")) {\n      propName = \"units\";\n      value = Number(value);\n      if (value < 1) {\n        return;\n      }\n    }\n    if (name.includes(\"a-\")) {\n      propName = \"activation\";\n    }\n\n    updateFunc((layers) =>\n      layers.map((item) => {\n        if (item.layerNo === layerNo) {\n          return { ...item, [propName]: value };\n        } else {\n          return { ...item };\n        }\n      })\n    );\n  };\n\n  return (\n    <div className={style[\"container\"]}>\n      <div>\n        <div className={style[\"table-header\"]}>\n          <span>Layer</span>\n          <span>Units</span>\n          <span>Activation</span>\n          <span>Action</span>\n        </div>\n        {layers.map((item) => {\n          return (\n            <div className={style[\"item\"]} key={item.layerNo}>\n              <label>{item.layerNo}</label>\n              {/* <label name={`u-${item.layerNo}`}>{`Units: `}</label> */}\n              <input\n                name={`u-${item.layerNo}`}\n                type=\"number\"\n                min={1}\n                max={100000}\n                value={item.units}\n                onChange={handleChange}\n              />\n              {/* <label htmlFor={`a-${item.layerNo}`}>{`Activation: `}</label> */}\n              <select\n                name={`a-${item.layerNo}`}\n                onChange={handleChange}\n                defaultValue={item.activation}\n              >\n                {ACTIVATION.map((opt, i) => (\n                  <option key={`o-${i}`} value={opt}>\n                    {opt}\n                  </option>\n                ))}\n              </select>\n              {layers.length !== 1 ? (\n                <button\n                  className=\"btn\"\n                  onClick={removeLayer}\n                  value={item.layerNo}\n                >\n                  Delete\n                </button>\n              ) : null}\n            </div>\n          );\n        })}\n      </div>\n      <button className=\"btn\" onClick={addLayer}>\n        Add new layer\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\nimport { useLinkedState } from \"use-linked-state\";\nimport LayersUI from \"../layers-ui/layers-ui\";\nimport style from \"./model.module.css\";\n\nconst ACTIVATION = [\"relu\", \"sigmoid\", \"tanh\", \"softmax\", \"linear\"];\nexport default function Model({ modelGateway, refreshGateway }) {\n  const [refresh] = useLinkedState(refreshGateway);\n  const [model, setModel] = useLinkedState(modelGateway);\n  const [layers, setLayers] = useState([\n    { layerNo: 1, units: 50, activation: ACTIVATION[0] },\n    { layerNo: 2, units: 50, activation: ACTIVATION[0] },\n    { layerNo: 3, units: 50, activation: ACTIVATION[0] },\n    { layerNo: 4, units: 50, activation: ACTIVATION[0] },\n  ]);\n  const modelRef = useRef();\n  //\n  useEffect(() => {\n    if (model) {\n      model.layers.forEach((layer) => layer.dispose());\n    }\n    const thisModel = tf.sequential();\n    thisModel.add(tf.layers.dense({ inputShape: [1], units: 1 }));\n    for (let layer of layers) {\n      thisModel.add(\n        tf.layers.dense({\n          units: Number(layer.units),\n          activation: layer.activation,\n        })\n      );\n    }\n    thisModel.add(tf.layers.dense({ units: 1 }));\n    setModel(thisModel);\n  }, [layers]);\n\n  useEffect(() => {\n    if (model) {\n      tfvis.show.modelSummary(modelRef.current, model);\n    }\n  }, [model]);\n  return (\n    <div className={style[\"container\"]}>\n      <LayersUI\n        layers={layers}\n        updateFunc={setLayers}\n        ACTIVATION={ACTIVATION}\n      />\n      <div className={style[\"model\"]} ref={modelRef}></div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useLinkedState } from \"use-linked-state\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nexport default function Tensors({ dataGateway, tensorsGateway }) {\n  const [data] = useLinkedState(dataGateway);\n  const [, setTensors] = useLinkedState(tensorsGateway);\n  useEffect(() => {\n    if (data === null) return;\n    const thisTensors = tf.tidy(() => {\n      tf.util.shuffle(data);\n      const inputs = data.map((item) => item.horsepower);\n      const labels = data.map((item) => item.mpg);\n      const inputsTensor = tf.tensor2d(inputs, [inputs.length, 1]);\n      const labelsTensor = tf.tensor2d(labels, [labels.length, 1]);\n      const inputsMax = inputsTensor.max();\n      const inputsMin = inputsTensor.min();\n      const labelsMax = labelsTensor.max();\n      const labelsMin = labelsTensor.min();\n      const inputsNormal = inputsTensor\n        .sub(inputsMin)\n        .div(inputsMax.sub(inputsMin));\n      const labelsNormal = labelsTensor\n        .sub(labelsMin)\n        .div(labelsMax.sub(labelsMin));\n      return {\n        inputs: inputsNormal,\n        labels: labelsNormal,\n        inputsMin,\n        inputsMax,\n        labelsMin,\n        labelsMax,\n      };\n    });\n    setTensors(thisTensors);\n  }, [data]);\n  return <div></div>;\n}\n","import React, { useRef, useState } from \"react\";\nimport { useLinkedState } from \"use-linked-state\";\nimport useDelayedFunction from \"use-delayed-function\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\nimport style from \"./train.module.css\";\n\nexport default function Train({\n  tensorsGateway,\n  modelGateway,\n  refreshGateway,\n}) {\n  const [refresh] = useLinkedState(refreshGateway);\n  const [model] = useLinkedState(modelGateway);\n  const [tensors] = useLinkedState(tensorsGateway);\n  const [batchSize, setBatchSize] = useState(32);\n  const [epochs, setEpochs] = useState(20);\n  const [training, setTraining] = useState(false);\n  const [delayedTrain] = useDelayedFunction(train);\n\n  const trainRef = useRef();\n\n  const startTrain = () => {\n    if (training) return;\n    setTraining(true);\n    delayedTrain().then(() => {\n      setTraining(false);\n    });\n  };\n  function train() {\n    if (!model || !tensors) return;\n    model.compile({\n      optimizer: tf.train.adam(),\n      loss: tf.losses.meanSquaredError,\n      metrics: [\"mse\"],\n    });\n    return model.fit(tensors.inputs, tensors.labels, {\n      batchSize,\n      epochs,\n      shuffle: true,\n      callbacks: tfvis.show.fitCallbacks(trainRef.current, [\"mse\"], {\n        height: 200,\n        callbacks: [\"onEpochEnd\"],\n      }),\n    });\n  }\n\n  function handleChange(e) {\n    switch (e.target.name) {\n      case \"epochs\":\n        setEpochs(Number(e.target.value));\n        break;\n      case \"batchSize\":\n        setBatchSize(Number(e.target.value));\n        break;\n      default:\n        break;\n    }\n  }\n  return (\n    <div className={style[\"container\"]}>\n      <div className={style[\"controls\"]}>\n        <label htmlFor=\"epochs\">{`Epochs: ${epochs}`}</label>\n        <input\n          type=\"range\"\n          name=\"epochs\"\n          value={epochs}\n          min=\"1\"\n          max=\"200\"\n          step=\"1\"\n          onChange={handleChange}\n        />\n        <label htmlFor=\"batchSize\">{`BatchSize: ${batchSize}`}</label>\n\n        <input\n          type=\"range\"\n          name=\"batchSize\"\n          value={batchSize}\n          min=\"1\"\n          max=\"400\"\n          step=\"1\"\n          onChange={handleChange}\n        />\n        <button className=\"btn\" onClick={startTrain}>\n          {training ? \"Training in progress...\" : \"Click to train!\"}\n        </button>\n      </div>\n\n      <div className={style[\"graph\"]} ref={trainRef}></div>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { useLinkedState } from \"use-linked-state\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\nimport style from \"./predict.module.css\";\n\nexport default function Predict({\n  modelGateway,\n  tensorsGateway,\n  dataGateway,\n  refreshGateway,\n}) {\n  const [refresh] = useLinkedState(refreshGateway);\n  const [model] = useLinkedState(modelGateway);\n  const [tensors] = useLinkedState(tensorsGateway);\n  const [data] = useLinkedState(dataGateway);\n\n  const resultRef = useRef();\n\n  function tidyPrediction() {\n    return tf.tidy(() => {\n      const { inputsMin, inputsMax, labelsMin, labelsMax } = tensors;\n      const input = tf.linspace(0, 1, 100);\n      const pred = model.predict(input.reshape([100, 1]));\n      // denormalizeing\n      const denormX = input.mul(inputsMax.sub(inputsMin)).add(inputsMin);\n      const denormY = pred.mul(labelsMax.sub(labelsMin)).add(labelsMin);\n      //\n      return [denormX.dataSync(), denormY.dataSync()];\n    });\n  }\n  function doPrediction() {\n    const [xs, ys] = tidyPrediction();\n    const pred = Array.from(xs).map((item, i) => {\n      return { x: item, y: ys[i] };\n    });\n    const originalData = data.map((item) => {\n      return { x: item.horsepower, y: item.mpg };\n    });\n\n    // visualizing\n    tfvis.render.scatterplot(\n      resultRef.current,\n      { values: [pred, originalData], series: [\"predicted\", \"data\"] },\n      {\n        xLabel: \"Horsepower\",\n        yLabel: \"MPG\",\n        height: 300,\n      }\n    );\n  }\n\n  return (\n    <div className={style[\"container\"]}>\n      <button className=\"btn\" onClick={doPrediction}>\n        Do prediction\n      </button>\n      <div className={style[\"graph\"]} ref={resultRef}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport github from \"../../assets/github.png\";\nimport style from \"./links.module.css\";\nexport default function Links() {\n  return (\n    <div className={style[\"container\"]}>\n      <div>\n        <h6>By following google tutorial for</h6>\n        <a\n          href=\"https://codelabs.developers.google.com/codelabs/tfjs-training-regression/index.html#0\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          TensorFlow.js — Making Predictions from 2D Data\n        </a>\n      </div>\n\n      <a\n        href=\"https://github.com/makannew/tensorflow-js-practice\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img src={github} alt=\"github\" />{\" \"}\n      </a>\n    </div>\n  );\n}\n","import React from \"react\";\nimport style from \"./header.module.css\";\n\nexport default function Header() {\n  return (\n    <div className={style[\"header\"]}>\n      <h1>Practice the regression task through Tensorflow.js</h1>\n      <p>\n        The goal is predicting cars MPG (Miles per Gallon) from given\n        Horsepower. It achieves by adjusting and training a model by the\n        available dataset. Finally, evaluating the model by comparing the\n        predicted values with the real one.\n      </p>\n    </div>\n  );\n}\n","import { div } from \"@tensorflow/tfjs\";\nimport React, { useEffect } from \"react\";\nimport useDelayedFunction from \"use-delayed-function\";\nimport { useLinkedState } from \"use-linked-state\";\n\nexport default function ResizeManager({ refreshGateway }) {\n  const [, setRefresh] = useLinkedState(refreshGateway);\n\n  const [setRefreshBydelay] = useDelayedFunction(setRefresh, 200);\n  useEffect(() => {\n    window.addEventListener(\"resize\", setRefreshBydelay);\n    return () => {\n      window.removeEventListener(\"resize\", setRefreshBydelay);\n    };\n  });\n\n  return <></>;\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport LoadData from \"./components/load-data/load-data\";\nimport { useStateGateway } from \"use-linked-state\";\nimport DataPlot from \"./components/data-plot/data-plot\";\nimport Model from \"./components/model/model\";\nimport Tensors from \"./components/tensors/tensors\";\nimport Train from \"./components/train/train\";\nimport Predict from \"./components/predict/predict\";\nimport Links from \"./components/links/links\";\nimport Header from \"./components/header/header\";\nimport ResizeManager from \"./components/resize-manager/resize-manager\";\n\nfunction App() {\n  const dataGateway = useStateGateway(null);\n  const modelGateway = useStateGateway(null);\n  const tensorsGateway = useStateGateway(null);\n  const refreshGateway = useStateGateway(false);\n\n  // TODO: add save and model feature for trained model\n\n  return (\n    <div className=\"App\">\n      <ResizeManager refreshGateway={refreshGateway} />\n      <Header />\n      <LoadData dataGateway={dataGateway} />\n      <DataPlot dataGateway={dataGateway} refreshGateway={refreshGateway} />\n      <Model modelGateway={modelGateway} refreshGateway={refreshGateway} />\n      <Tensors dataGateway={dataGateway} tensorsGateway={tensorsGateway} />\n      <Train\n        tensorsGateway={tensorsGateway}\n        modelGateway={modelGateway}\n        refreshGateway={refreshGateway}\n      />\n      <Predict\n        tensorsGateway={tensorsGateway}\n        modelGateway={modelGateway}\n        dataGateway={dataGateway}\n        refreshGateway={refreshGateway}\n      />\n      <Links />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}